#!/bin/bash

# Exit script on first failure.
set -e

# Exit on unset variable.
set -u

readonly TINYPILOT_USER="tinypilot"
readonly TINYPILOT_GROUP="tinypilot"
readonly TINYPILOT_HOME_DIR="/home/${TINYPILOT_USER}"

# Create tinypilot group if it doesn't already exist.
getent group "${TINYPILOT_GROUP}" > /dev/null || \
  addgroup \
    --system \
    "${TINYPILOT_GROUP}"

# adduser is idempotent, so we don't need to check existence first.
adduser \
  --system \
  `# We have to specify a shell to override the default /usr/sbin/nologin, ` \
  `# which prevents us from executing commands through "sudo su".` \
  --shell /bin/bash \
  --ingroup "${TINYPILOT_GROUP}" \
  --home "${TINYPILOT_HOME_DIR}" \
  "${TINYPILOT_USER}"

# Create TinyPilot settings file if it doesn't already exist.
readonly TINYPILOT_SETTINGS_FILE="${TINYPILOT_HOME_DIR}/settings.yml"
if [[ ! -f "${TINYPILOT_SETTINGS_FILE}" ]]; then
  touch "${TINYPILOT_SETTINGS_FILE}"
  chown "${TINYPILOT_USER}:${TINYPILOT_GROUP}" "${TINYPILOT_SETTINGS_FILE}"

  # Make TinyPilot settings world readable so that the uStreamer launcher script
  # can access it via a symbolic link.
  chmod 0644 "${TINYPILOT_SETTINGS_FILE}"
fi

# Populate TinyPilot's NGINX config files.
runuser tinypilot \
  --command 'PYTHONPATH=/usr/lib/tinypilot/app /usr/lib/tinypilot/venv/bin/python /usr/lib/tinypilot/scripts/render-template' \
  < /usr/share/tinypilot/templates/tinypilot-upstreams.conf.j2 \
  > /etc/nginx/conf.d/tinypilot-upstreams.conf
runuser tinypilot \
  --command 'PYTHONPATH=/usr/lib/tinypilot/app /usr/lib/tinypilot/venv/bin/python /usr/lib/tinypilot/scripts/render-template' \
  < /usr/share/tinypilot/templates/tinypilot-location.conf.j2 \
  > /etc/nginx/conf.d/tinypilot-location.conf.sample

# Manage TLS keys if not specified otherwise.
if ! grep \
    --silent \
    --fixed-strings \
    --regexp 'tinypilot_manage_tls_keys: no' \
    --regexp 'tinypilot_manage_tls_keys: false' \
    "${TINYPILOT_SETTINGS_FILE}"; then
  # Generate NGINX CA keys.
  if [[ ! -e /etc/ssl/certs/tinypilot-ca.crt ]]; then
    /usr/libexec/tinypilot-privileged/scripts/generate-nginx-ca-keypair
  fi
  # Generate NGINX TLS keys.
  if [[ ! -e /etc/ssl/certs/tinypilot-nginx.crt ]]; then
    /usr/libexec/tinypilot-privileged/scripts/cycle-nginx-tls-keys
  fi
fi

# Enable TC358743-audio overlay in /boot/config.txt.
# Note that the tc358743-audio overlay depends on the tc358743 overlay.
#sed --in-place --expression '/dtoverlay=tc358743-audio/d' "${BOOT_CONFIG_PATH}"
#sed --in-place '/dtoverlay=tc358743/ a dtoverlay=tc358743-audio' "${BOOT_CONFIG_PATH}"

# Set GPU memory to 256MB in /boot/config.txt
#if grep --silent '^gpu_mem=' "${BOOT_CONFIG_PATH}" ; then
#  sed --in-place '/^gpu_mem=/ c\gpu_mem=256' "${BOOT_CONFIG_PATH}"
#else
#  echo 'gpu_mem=256' | tee --append "${BOOT_CONFIG_PATH}"
#fi

# Populate TinyPilot's EDID.
mkdir -p /home/ustreamer/edids
runuser tinypilot \
  --command 'PYTHONPATH=/usr/lib/tinypilot/app /usr/lib/tinypilot/venv/bin/python /usr/lib/tinypilot/scripts/render-template' \
  <<< '{{ ustreamer_edid }}' \
  > /home/ustreamer/edids/tc358743-edid.hex
chmod 0644 /home/ustreamer/edids/tc358743-edid.hex

# Populate TinyPilot's Janus settings file.
readonly JANUS_PLUGIN_USTREAMER_CONFIG='/etc/janus/janus.plugin.ustreamer.jcfg'
cat <<EOF > "${JANUS_PLUGIN_USTREAMER_CONFIG}"
video: {
    sink = "tinypilot::ustreamer::h264"
}
EOF

# Create a directory for uStreamer launcher configs.
readonly USTREAMER_LAUNCHER_BASE_DIR='/usr/libexec/ustreamer-launcher'
readonly USTREAMER_LAUNCHER_CONFIG_DIR="${USTREAMER_LAUNCHER_BASE_DIR}/configs.d"
mkdir -p "${USTREAMER_LAUNCHER_CONFIG_DIR}"

# Figure out which uStreamer settings file to use.
USTREAMER_CONFIG_TARGET="${USTREAMER_LAUNCHER_BASE_DIR}/config-library/hdmi-to-usb.yml"
readonly USTREAMER_CONFIG_TARGET

readonly USTREAMER_BASE_CONFIG_FILE="${USTREAMER_LAUNCHER_CONFIG_DIR}/000-defaults.yml"

# If the base configuration file is not a symlink to the correct file, remove
# it. This can happen if the user has previously installed with a different
# configuration (e.g., the user installs with the default HDMI to USB adapter
# and then switches to the TC358743 adapter).
if [[ -e "${USTREAMER_BASE_CONFIG_FILE}" ]] && \
    [[ ! "${USTREAMER_BASE_CONFIG_FILE}" -ef "${USTREAMER_CONFIG_TARGET}" ]]; \
      then
  rm "${USTREAMER_BASE_CONFIG_FILE}"
fi

# Create the base configuration file if it doesn't already exist.
if [[ ! -e "${USTREAMER_BASE_CONFIG_FILE}" ]]; then
  ln \
    --symbolic \
    "${USTREAMER_CONFIG_TARGET}" \
    "${USTREAMER_BASE_CONFIG_FILE}"
fi

# Use TinyPilot's settings to override uStreamer's runtime variables.
readonly TINYPILOT_USTREAMER_OVERRIDES_FILE="${USTREAMER_LAUNCHER_CONFIG_DIR}/100-tinypilot.yml"
if [[ ! -L "${TINYPILOT_USTREAMER_OVERRIDES_FILE}" ]]; then
  ln \
    --symbolic \
    "${TINYPILOT_SETTINGS_FILE}" \
    "${TINYPILOT_USTREAMER_OVERRIDES_FILE}"
fi

# Add NGINX snippets.
cp \
  /usr/share/tinypilot/nginx_request_headers.conf \
  /etc/nginx/snippets/request-headers.conf
cp \
  /usr/share/tinypilot/nginx_response_headers.conf \
  /etc/nginx/snippets/response-headers.conf

# Restore the Janus config files.
/usr/libexec/tinypilot-privileged/scripts/configure-janus
cp \
  /usr/share/tinypilot/janus.transport.websockets.jcfg \
  /etc/janus/janus.transport.websockets.jcfg

# enable HID service
deb-systemd-invoke enable usb-gadget-tinypilot-hid

#DEBHELPER#
